From e5ecc03b7ae65eda30357af92687b36c23bcf36d Mon Sep 17 00:00:00 2001
From: Stefan Agner <stefan@agner.ch>
Date: Fri, 14 Jun 2024 15:43:44 +0200
Subject: [PATCH] [Python] Drop unnecessary null termination (#33915)

The ctypes data type `c_char_p` takes care of null-terminating the byte
array provided to it. The additional null termination doesn't hurt in
practice, but it's unnecessary.
---
 src/controller/python/chip/ChipDeviceCtrl.py | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/src/controller/python/chip/ChipDeviceCtrl.py b/src/controller/python/chip/ChipDeviceCtrl.py
index 6805958420..b99d1db018 100644
--- a/src/controller/python/chip/ChipDeviceCtrl.py
+++ b/src/controller/python/chip/ChipDeviceCtrl.py
@@ -642,7 +642,7 @@ class ChipDeviceControllerBase():
 
         self._ChipStack.Call(
             lambda: self._dmLib.pychip_DeviceController_DiscoverCommissionableNodes(
-                self.devCtrl, int(filterType), str(filter).encode("utf-8") + b"\x00")).raise_on_error()
+                self.devCtrl, int(filterType), str(filter).encode("utf-8"))).raise_on_error()
 
         if timeoutSecond != 0:
             if stopOnFirst:
@@ -1843,7 +1843,7 @@ class ChipDeviceController(ChipDeviceControllerBase):
             self._enablePairingCompeleteCallback(True)
             self._ChipStack.Call(
                 lambda: self._dmLib.pychip_DeviceController_OnNetworkCommission(
-                    self.devCtrl, self.pairingDelegate, nodeId, setupPinCode, int(filterType), str(filter).encode("utf-8") + b"\x00" if filter is not None else None, discoveryTimeoutMsec)
+                    self.devCtrl, self.pairingDelegate, nodeId, setupPinCode, int(filterType), str(filter).encode("utf-8") if filter is not None else None, discoveryTimeoutMsec)
             ).raise_on_error()
 
             return self._commissioning_complete_future.result()
@@ -1856,15 +1856,13 @@ class ChipDeviceController(ChipDeviceControllerBase):
         '''
         self.CheckIsActive()
 
-        setupPayload = setupPayload.encode() + b'\0'
-
         self._commissioning_complete_future = concurrent.futures.Future()
 
         try:
             self._enablePairingCompeleteCallback(True)
             self._ChipStack.Call(
                 lambda: self._dmLib.pychip_DeviceController_ConnectWithCode(
-                    self.devCtrl, setupPayload, nodeid, discoveryType.value)
+                    self.devCtrl, setupPayload.encode("utf-8"), nodeid, discoveryType.value)
             ).raise_on_error()
 
             return self._commissioning_complete_future.result()
-- 
2.45.2

